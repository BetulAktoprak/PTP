@model PTP.UI.Models.ProjectCreateViewModel

<div class="tab-pane fade show active" id="gallery-product" role="tabpanel" aria-labelledby="gallery-product-tab">
    <div class="sidebar-body">
        <div class="mb-3">
            <label for="projectFiles" class="form-label fw-bold">
                <i class="fa fa-cloud-upload-alt me-2"></i> Proje Dosyaları
            </label>
            <input type="file" id="projectFiles" name="ProjectFiles" class="form-control" multiple />
            <input type="hidden" name="DocumentDescriptionsJson" id="DocumentDescriptionsJson" />


        </div>

        <div id="selectedFiles" class="mt-3"></div>
    </div>
</div>

<script>
         let selectedFiles = [];

    document.addEventListener('DOMContentLoaded', function () {

        // Dosya seçildiğinde listeye ekle
        document.getElementById('projectFiles').addEventListener('change', function () {
            const newFiles = Array.from(this.files);
            newFiles.forEach(file => {
                if (!selectedFiles.some(f => f.file.name === file.name && f.file.size === file.size)) {
                    selectedFiles.push({ file: file, description: "" });
                }
            });
            renderSelectedFiles();
            this.value = ""; // tekrar aynı dosya seçilebilsin diye sıfırlıyoruz
        });

        // Açıklama güncelle
        window.updateDescription = function (index, value) {
            selectedFiles[index].description = value;
        }

        // Listele
        function renderSelectedFiles() {
            const fileListContainer = document.getElementById('selectedFiles');
            fileListContainer.innerHTML = '';
            selectedFiles.forEach((item, index) => {
                const fileDiv = document.createElement('div');
                fileDiv.classList.add('mb-2');
                fileDiv.innerHTML = `
                    <div class="card p-2">
                        <p class="mb-1 fw-semibold">Dosya: ${item.file.name}</p>
                        <label>Açıklama</label>
                        <input type="text" class="form-control" placeholder="Belge açıklaması girin"
                            value="${item.description}"
                            oninput="updateDescription(${index}, this.value)" />
                    </div>`;
                fileListContainer.appendChild(fileDiv);
            });
        }

        // Modal'da onayla butonuna basıldığında veriyi hazırla ve gönder
        document.getElementById('btnConfirmSave').addEventListener('click', function (e) {
            e.preventDefault();
            const formElement = document.getElementById('projectForm');
            const formData = new FormData(formElement);

            // Dosyaları ve açıklamaları FormData'ya ekle
            selectedFiles.forEach((item, index) => {
                formData.append('ProjectFiles', item.file);
                formData.append(`DocumentDescriptions[${index}]`, item.description);
            });

            // Gerekirse console’da kontrol edebilirsin:
            // for (let pair of formData.entries()) {
            //     console.log(pair[0]+ ':', pair[1]);
            // }

            fetch('/Project/Create', {
                method: 'POST',
                body: formData
            })
            .then(response => {
                if (response.ok) {
                    alert('Dosyalar başarıyla yüklendi!');
                    window.location.href = "/Project"; // Başarılıysa yönlendir
                } else {
                    alert('Yükleme başarısız oldu.');
                }
            })
            .catch(error => {
                console.error('Hata:', error);
                alert('Bir hata oluştu.');
            });
        });
    });
</script>




@* <div class="tab-pane fade" id="gallery-product" role="tabpanel" aria-labelledby="gallery-product-tab"> *@
@*     <div class="sidebar-body"> *@
@*         <div class="product-upload"> *@
@*             <div class="dz-message needsclick"> *@
@*                 <label asp-for="ProjectFiles" class="form-label"><i class="icon-cloud-up"></i> Proje Dosyaları</label> *@
@*                 <input type="file" asp-for="ProjectFiles" id="projectFiles" class="form-control" multiple /> *@

@*             </div> *@
@*         </div> *@

@*         <div class="row mt-2"> *@
@*             <div id="selectedFilesList" class="col-12"> *@

@*                 <!-- Seçilen dosyalar listesi --> *@
@*             </div> *@

@*         </div> *@
@*     </div> *@
@* </div> *@


@* <script> *@
@*         let selectedFiles = []; *@

@*     document.getElementById('projectFiles').addEventListener('change', function (e) { *@
@*         const newFiles = Array.from(e.target.files); *@

@*         newFiles.forEach(file => { *@
@*             if (!selectedFiles.some(f => f.file.name === file.name && f.file.size === file.size)) { *@
@*                 selectedFiles.push({ file: file, description: "" }); *@
@*             } *@
@*         }); *@

@*         updateSelectedFilesList(); *@
@*         e.target.value = ''; *@
@*     }); *@

@*     function updateSelectedFilesList() { *@
@*         const list = document.getElementById('selectedFilesList'); *@
@*         list.innerHTML = ''; *@

@*         selectedFiles.forEach((item, index) => { *@
@*             const wrapper = document.createElement('div'); *@
@*             wrapper.className = "mb-2"; *@

@*             const fileInfo = document.createElement('div'); *@
@*             fileInfo.textContent = item.file.name; *@

@*             const input = document.createElement('input'); *@
@*             input.type = "text"; *@
@*             input.placeholder = "Dosya açıklaması"; *@
@*             input.name = `Descriptions[${index}]`; // 💡 Burası önemli! *@
@*             input.className = "form-control mt-1"; *@
@*             input.value = item.description; *@

@*             input.addEventListener('input', function () { *@
@*                 selectedFiles[index].description = this.value; *@
@*             }); *@

@*             wrapper.appendChild(fileInfo); *@
@*             wrapper.appendChild(input); *@
@*             list.appendChild(wrapper); *@
@*         }); *@
@*     } *@


@*         document.getElementById('projectForm').addEventListener('submit', function (e) { *@
@*         e.preventDefault(); *@

@*         const form = document.getElementById('projectForm'); *@
@*         const formData = new FormData(form); *@

@*         selectedFiles.forEach(item => { *@
@*             formData.append('ProjectFiles', item.file); *@
@*         }); *@

@*         selectedFiles.forEach((item, index) => { *@
@*             formData.append(`description`, item.description); // açıklamaları da ekliyoruz *@
@*         }); *@

@*         fetch(form.action || window.location.href, { *@
@*             method: 'POST', *@
@*             body: formData *@
@*         }) *@
@*         .then(response => { *@
@*             if (response.redirected) { *@
@*                 window.location.href = response.url; *@
@*             } else { *@
@*                 return response.text().then(text => alert("Kayıt tamamlandı mı kontrol edin!")); *@
@*             } *@
@*         }) *@
@*         .catch(error => { *@
@*             console.error("Hata:", error); *@
@*             alert("Bir hata oluştu."); *@
@*         }); *@
@*     }); *@

@* </script> *@

