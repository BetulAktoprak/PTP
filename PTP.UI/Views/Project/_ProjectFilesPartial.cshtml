@model PTP.UI.Models.ProjectCreateViewModel

<div class="tab-pane fade" id="gallery-product" role="tabpanel" aria-labelledby="gallery-product-tab">
    <div class="sidebar-body">
        <div class="mb-3">
            <label asp-for="ProjectFiles" class="form-label fw-bold">
                <i class="fa fa-cloud-upload-alt me-2"></i> Proje Dosyaları
            </label>
            <input type="file" asp-for="ProjectFiles" id="projectFiles" class="form-control" multiple />
        </div>

        <div id="selectedFilesList" class="mt-3">
            <!-- Seçilen dosyalar burada listelenecek -->
        </div>
    </div>
</div>

<script>
    let selectedFiles = [];

    document.getElementById('projectFiles').addEventListener('change', function (e) {
        const newFiles = Array.from(e.target.files);
        newFiles.forEach(file => {
            if (!selectedFiles.some(f => f.name === file.name && f.size === file.size)) {
                selectedFiles.push({ file, description: '' });
            }
        });
        updateSelectedFilesList();
        e.target.value = '';
    });

    function updateSelectedFilesList() {
        const list = document.getElementById('selectedFilesList');
        list.innerHTML = '';

        selectedFiles.forEach((item, index) => {
            const wrapper = document.createElement('div');
            wrapper.className = 'border rounded p-3 mb-3 bg-light shadow-sm position-relative';

            // Dosya ismi ve büyüklüğü
            const fileInfo = document.createElement('div');
            fileInfo.innerHTML = `
                <strong>${item.file.name}</strong> <small class="text-muted">(${Math.round(item.file.size / 1024)} KB)</small>
            `;

            // Açıklama alanı
            const description = document.createElement('textarea');
            description.className = 'form-control mt-2';
            description.placeholder = 'Dosya açıklaması...';
            description.value = item.description || '';
            description.oninput = (e) => {
                selectedFiles[index].description = e.target.value;
            };

            // Silme butonu
            const removeBtn = document.createElement('button');
            removeBtn.className = 'btn btn-sm btn-danger position-absolute top-0 end-0 m-2';
            removeBtn.innerHTML = '<i class="fa fa-times"></i>';
            removeBtn.onclick = () => {
                selectedFiles.splice(index, 1);
                updateSelectedFilesList();
            };

            wrapper.appendChild(removeBtn);
            wrapper.appendChild(fileInfo);
            wrapper.appendChild(description);

            list.appendChild(wrapper);
        });
    }

    document.getElementById('projectForm').addEventListener('submit', function (e) {
        e.preventDefault();
        const form = document.getElementById('projectForm');
        const formData = new FormData(form);

        selectedFiles.forEach(item => {
            formData.append('ProjectFiles', item.file);
            formData.append('Description', item.description); // Bu satır önemli!
        });

        fetch(form.action || window.location.href, {
            method: 'POST',
            body: formData
        })
        .then(response => {
            if (response.redirected) {
                window.location.href = response.url;
            } else {
                return response.text().then(text => alert("Kayıt tamamlandı mı kontrol edin!"));
            }
        })
        .catch(error => {
            console.error("Hata:", error);
            alert("Bir hata oluştu.");
        });
    });
</script>


@* <div class="tab-pane fade" id="gallery-product" role="tabpanel" aria-labelledby="gallery-product-tab"> *@
@*     <div class="sidebar-body"> *@
@*         <div class="product-upload"> *@
@*             <div class="dz-message needsclick"> *@
@*                 <label asp-for="ProjectFiles" class="form-label"><i class="icon-cloud-up"></i> Proje Dosyaları</label> *@
@*                 <input type="file" asp-for="ProjectFiles" id="projectFiles" class="form-control" multiple /> *@

@*             </div> *@
@*         </div> *@

@*         <div class="row mt-2"> *@
@*             <div id="selectedFilesList" class="col-12"> *@

@*                 <!-- Seçilen dosyalar listesi --> *@
@*             </div> *@

@*         </div> *@
@*     </div> *@
@* </div> *@


@* <script> *@
@*         let selectedFiles = []; *@

@*     document.getElementById('projectFiles').addEventListener('change', function (e) { *@
@*         const newFiles = Array.from(e.target.files); *@

@*         newFiles.forEach(file => { *@
@*             if (!selectedFiles.some(f => f.file.name === file.name && f.file.size === file.size)) { *@
@*                 selectedFiles.push({ file: file, description: "" }); *@
@*             } *@
@*         }); *@

@*         updateSelectedFilesList(); *@
@*         e.target.value = ''; *@
@*     }); *@

@*     function updateSelectedFilesList() { *@
@*         const list = document.getElementById('selectedFilesList'); *@
@*         list.innerHTML = ''; *@

@*         selectedFiles.forEach((item, index) => { *@
@*             const wrapper = document.createElement('div'); *@
@*             wrapper.className = "mb-2"; *@

@*             const fileInfo = document.createElement('div'); *@
@*             fileInfo.textContent = item.file.name; *@

@*             const input = document.createElement('input'); *@
@*             input.type = "text"; *@
@*             input.placeholder = "Dosya açıklaması"; *@
@*             input.name = `Descriptions[${index}]`; // 💡 Burası önemli! *@
@*             input.className = "form-control mt-1"; *@
@*             input.value = item.description; *@

@*             input.addEventListener('input', function () { *@
@*                 selectedFiles[index].description = this.value; *@
@*             }); *@

@*             wrapper.appendChild(fileInfo); *@
@*             wrapper.appendChild(input); *@
@*             list.appendChild(wrapper); *@
@*         }); *@
@*     } *@


@*         document.getElementById('projectForm').addEventListener('submit', function (e) { *@
@*         e.preventDefault(); *@

@*         const form = document.getElementById('projectForm'); *@
@*         const formData = new FormData(form); *@

@*         selectedFiles.forEach(item => { *@
@*             formData.append('ProjectFiles', item.file); *@
@*         }); *@

@*         selectedFiles.forEach((item, index) => { *@
@*             formData.append(`description`, item.description); // açıklamaları da ekliyoruz *@
@*         }); *@

@*         fetch(form.action || window.location.href, { *@
@*             method: 'POST', *@
@*             body: formData *@
@*         }) *@
@*         .then(response => { *@
@*             if (response.redirected) { *@
@*                 window.location.href = response.url; *@
@*             } else { *@
@*                 return response.text().then(text => alert("Kayıt tamamlandı mı kontrol edin!")); *@
@*             } *@
@*         }) *@
@*         .catch(error => { *@
@*             console.error("Hata:", error); *@
@*             alert("Bir hata oluştu."); *@
@*         }); *@
@*     }); *@

@* </script> *@

