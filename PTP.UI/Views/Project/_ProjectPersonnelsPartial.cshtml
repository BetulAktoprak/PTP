@using Newtonsoft.Json
@model PTP.UI.Models.ProjectCreateViewModel

@{
    var personnelJson = JsonConvert.SerializeObject(ViewBag.PersonnelListJson);
}

<div class="tab-pane fade" id="category-product" role="tabpanel" aria-labelledby="category-product-tab">
    <div class="sidebar-body">
        <div class="row g-lg-4 g-3">
            <div class="col-12">
                <div class="row g-5">
                    <div class="col-12">
                        <label class="form-label fw-bold">Personel Yetkileri</label>
                        <div class="mb-3">
                            <input type="text" id="personnelSearch" class="form-control" placeholder="Personel ara...">
                        </div>

                        <div class="table-responsive" style="max-height: 400px; overflow-y: auto;">
                            <table class="table table-bordered align-middle text-center mb-0">
                                <thead class="table-light sticky-top">
                                    <tr>
                                        <th>Personel</th>
                                        <th>Okuma</th>
                                        <th>Oluşturma</th>
                                        <th>Güncelleme</th>
                                        <th>Silme</th>
                                        <th>Yorum</th>
                                    </tr>
                                </thead>
                                <tbody id="personnelTableBody">
                                    <!-- JavaScript ile satırlar eklenecek -->
                                </tbody>
                            </table>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

<!-- JSON verisini taşıyacak gizli input -->
<input type="hidden" name="SelectedPersonnelJson" id="personnelTagInput" />

<script>
    const personnelList = @Html.Raw(personnelJson);

    const tbody = document.getElementById("personnelTableBody");

    personnelList.forEach(p => {
        const row = document.createElement("tr");

        row.innerHTML = `
            <td class="text-start">${p.name}<input type="hidden" class="personnel-id" value="${p.value}" /></td>
            <td><input type="checkbox" class="form-check-input can-read" /></td>
            <td><input type="checkbox" class="form-check-input can-create" /></td>
            <td><input type="checkbox" class="form-check-input can-update" /></td>
            <td><input type="checkbox" class="form-check-input can-delete" /></td>
            <td><input type="checkbox" class="form-check-input can-comment" /></td>
        `;

        tbody.appendChild(row);
    });

    const form = document.querySelector("#projectForm");
    form.addEventListener("submit", function () {
        const rows = document.querySelectorAll("#personnelTableBody tr");
        const selectedPersonnel = [];

        rows.forEach(row => {
            const id = row.querySelector(".personnel-id").value;
            const canRead = row.querySelector(".can-read").checked;
            const canCreate = row.querySelector(".can-create").checked;
            const canUpdate = row.querySelector(".can-update").checked;
            const canDelete = row.querySelector(".can-delete").checked;
            const canComment = row.querySelector(".can-comment").checked;

            if (canRead || canCreate || canUpdate || canDelete || canComment) {
                selectedPersonnel.push({
                    PersonnelId: parseInt(id),
                    CanRead: canRead,
                    CanCreate: canCreate,
                    CanUpdate: canUpdate,
                    CanDelete: canDelete,
                    CanComment: canComment
                });
            }
        });

        document.getElementById("SelectedPersonnelJson").value = JSON.stringify(selectedPersonnel);
    });
</script>

<script>
    document.getElementById("personnelSearch").addEventListener("keyup", function () {
        const searchValue = this.value.toLowerCase();
        const rows = document.querySelectorAll("#personnelTableBody tr");

        rows.forEach(row => {
            const nameCell = row.querySelector("td:first-child");
            const name = nameCell.textContent.toLowerCase();
            row.style.display = name.includes(searchValue) ? "" : "none";
        });
    });
</script>


@* <script> *@
@*         document.addEventListener("DOMContentLoaded", function () { *@
@*         const input = document.querySelector("#personnelTagInput"); *@
@*         window.tagify = new Tagify(input, { *@
@*             tagTextProp: "name" *@
@*         }); *@

@*             let suggestions = []; *@
@*             const jsonData = '@Html.Raw(ViewBag.PersonnelListJson)'; *@
@*             if (jsonData.trim() !== "") { *@
@*                 suggestions = JSON.parse(jsonData); *@
@*             } else { *@
@*                 console.error("JSON verisi boş veya geçersiz."); *@
@*             } *@

@*              if (!Array.isArray(suggestions)) { *@
@*                 console.error("Veri geçersiz! Liste bir dizi olmalı."); *@
@*                 return; *@
@*             } *@

@*         const suggestionsContainer = document.getElementById("suggestions-container"); *@

@*         if (Array.isArray(suggestions)) { *@
@*             suggestions.forEach(item => { *@

@*             const div = document.createElement("div"); *@
@*             div.textContent = item.name; *@
@*             div.dataset.value = item.value; *@
@*             suggestionsContainer.appendChild(div); *@

@*                 div.addEventListener("click", function () { *@
@*                 const tag = { value: item.value, name: item.name }; *@

@*                 if (document.querySelector(`[data-id="${tag.value}"]`)) { *@
@*                     return;   *@
@*                 } *@

@*                 tagify.addTags([tag]); *@

@*                 const container = document.getElementById("selected-personnel-permissions"); *@

@*                 const permissionHtml = ` *@
@*                     <div class="card my-2 p-3" data-id="${tag.value}"> *@
@*                         <strong>${tag.name}</strong> *@
@*                         <div class="form-check"> *@
@*                             <input class="form-check-input permission-checkbox" type="checkbox" data-type="read" data-id="${tag.value}"> *@
@*                             <label class="form-check-label">Okuma Yetkisi</label> *@
@*                         </div> *@
@*                         <div class="form-check"> *@
@*                             <input class="form-check-input permission-checkbox" type="checkbox" data-type="create" data-id="${tag.value}"> *@
@*                             <label class="form-check-label">Yazma Yetkisi</label> *@
@*                         </div> *@
@*                         <div class="form-check"> *@
@*                             <input class="form-check-input permission-checkbox" type="checkbox" data-type="update" data-id="${tag.value}"> *@
@*                             <label class="form-check-label">Güncelleme Yetkisi</label> *@
@*                         </div> *@
@*                         <div class="form-check"> *@
@*                             <input class="form-check-input permission-checkbox" type="checkbox" data-type="delete" data-id="${tag.value}"> *@
@*                             <label class="form-check-label">Silme Yetkisi</label> *@
@*                         </div> *@
@*                         <div class="form-check"> *@
@*                             <input class="form-check-input permission-checkbox" type="checkbox" data-type="comment" data-id="${tag.value}"> *@
@*                             <label class="form-check-label">Yorum Yetkisi</label> *@
@*                         </div> *@
@*                     </div> *@
@*                 `; *@
                    
@*                 container.insertAdjacentHTML("beforeend", permissionHtml); *@
@*             }); *@
@*                 tagify.on('remove', function(e) { *@
@*                 const removedId = e.detail.data.value; *@
@*                 const card = document.querySelector(`[data-id="${removedId}"]`); *@
@*                 if (card) card.remove(); *@
@*             }); *@

            
@*         }); *@
@*         } *@
@*     }); *@
@* </script> *@


@* Personel Ekleme *@
@* <script> *@

@*     document.getElementById("submitPersonnelBtn").addEventListener("click", function (e) { *@
@*         e.preventDefault(); *@

@*         const formData = { *@
@*             FullName: document.querySelector('[name="FullName"]').value, *@
@*             Email: document.querySelector('[name="Email"]').value, *@
@*             Phone: document.querySelector('[name="Phone"]').value, *@
@*             Password: document.querySelector('[name="Password"]').value, *@
@*             Role: "Personnel" *@
@*         }; *@

@*         fetch("/Personnel/Add", { *@
@*             method: "POST", *@
@*             headers: { *@
@*                 "Content-Type": "application/json", *@
@*             }, *@
@*             body: JSON.stringify(formData) *@
@*         }) *@
@*         .then(response => { *@
@*             if (!response.ok) { *@
@*                 throw new Error("Sunucu hatası: " + response.status); *@
@*             } *@
@*             return response.json(); *@
@*         }) *@
@*         .then(data => { *@
@*             const ddl = document.querySelector('[name="SelectedPersonnelIds"]'); *@
@*             const option = document.createElement("option"); *@
@*             option.value = data.id; *@
@*             option.text = data.fullName; *@
@*             option.selected = true; *@
@*             ddl.appendChild(option); *@

@*             if (window.tagify) { *@
@*                 const newSuggestion = { value: data.id, name: data.fullName }; *@
@*                 window.tagify.settings.whitelist.push(newSuggestion); *@
@*                 window.tagify.dropdown.refilter(); *@

@*                 const suggestionsContainer = document.getElementById("suggestions-container"); *@
@*                 const div = document.createElement("div"); *@
@*                 div.textContent = data.fullName; *@
@*                 div.dataset.value = data.id; *@
@*                 div.classList.add("suggestion-item"); *@
@*                 div.addEventListener("click", function () { *@
@*                     window.tagify.addTags([{ value: data.id, name: data.fullName }]); *@
@*                 }); *@
@*                 suggestionsContainer.appendChild(div); *@
@*             } *@

@*             const modalElement = document.getElementById("add-personnel-modal"); *@
@*             if (modalElement) { *@
@*                 const modal = bootstrap.Modal.getInstance(modalElement); *@
@*                 modal.hide(); *@
@*             } *@
@*         }) *@
@*         .catch(error => { *@
@*             console.error("Personel eklenirken hata:", error); *@
@*         }); *@
@*     }); *@
@* </script> *@