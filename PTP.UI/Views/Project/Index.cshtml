@model IEnumerable<PTP.EntityLayer.Models.Project>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<style>
    .jsgrid-table {
        table-layout: fixed !important;
        width: 1500px !important;
    }

    #pageSizeButtons .btn:hover {
        background-color: #aa1c18 !important;
        color: white !important;
    }

    #pageSizeButtons .btn.active {
        background-color: #aa1c18 !important;
        color: white !important;
    }

    #pageSizeButtons .btn-outline-primary {
        border-color: #aa1c18 !important; /* Kenarlık rengi - yeşil */
       
    }

    #topScroll::-webkit-scrollbar {
        height: 15px;
    }

    #topScroll::-webkit-scrollbar-track {
        background: #f1f1f1;
    }

    #topScroll::-webkit-scrollbar-thumb {
        background: #5b5757;
        border-radius: 5px;
    }

        #topScroll::-webkit-scrollbar-thumb:hover {
            background: #5b5757;
        }

    /* Firefox */
    #topScroll {
        scrollbar-color: #f1f1f1 #f1f1f1;
        scrollbar-width: thin;
    }

</style>



<div class="container-fluid">
    <div class="row">
        <div class="col-sm-12">
            <div class="card">

                <div id="topScroll" style="overflow-x: auto; height: 16px;">
                    <div id="scrollSyncContent" style="height: 1px;"></div>
                </div>

                <div id="jsGridWrapper" style="overflow-x: auto;">
                    <div id="jsGrid">

                    </div>

                </div>
                <div class="d-flex justify-content-end align-items-center m-3 gap-2">
                    <label class="me-2">Her sayfada</label>
                    <div id="pageSizeButtons" class="btn-group" role="group">
                        <button type="button" class="btn btn-outline-primary btn-sm" data-size="8">8</button>
                        <button type="button" class="btn btn-outline-primary btn-sm" data-size="20">20</button>
                        <button type="button" class="btn btn-outline-primary btn-sm" data-size="50">50</button>
                        <button type="button" class="btn btn-outline-primary btn-sm" data-size="100">100</button>
                    </div>
                    <label class="me-2">proje göster</label>
                </div>
            </div>
        </div>
    </div>
    <div class="floating-add-btn d-flex justify-content-end" style="position: fixed; bottom: 55px; right: 45px; z-index: 999;">
        <a class="btn btn-primary rounded-circle shadow-lg d-flex align-items-center justify-content-center"
           href="/Project/Create" style="width: 50px; height: 50px;" title="Yeni Proje">
            <i class="fa fa-plus"></i>
        </a>
    </div>
</div>



<div class="modal fade" id="projectDocumentsModal" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel">Dökümanlar</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
            </div>
            <div class="modal-body" style="max-height: 600px; overflow-y: auto;">
                <div class="d-flex flex-column align-items-center" id="projectDocumentsContent"></div>
            </div>


        </div>
    </div>
</div>


<script>
    let currentPageSize = 8;

    $(function () {
        initializeGrid(currentPageSize);

        // Butonlara tıklanınca page size güncelle
        $("#pageSizeButtons button").on("click", function () {
            const newSize = parseInt($(this).data("size"));
            currentPageSize = newSize;

            // Aktif butonu güncelle
            $("#pageSizeButtons button").removeClass("active");
            $(this).addClass("active");

            // jsGrid'i yeniden oluştur
            $("#jsGrid").jsGrid("destroy");
            initializeGrid(currentPageSize);
        });

        // İlk butonu aktif olarak işaretle
        $("#pageSizeButtons button[data-size='" + currentPageSize + "']").addClass("active");

        $("#topScroll").on("scroll", function () {
            $("#jsGridWrapper").scrollLeft($(this).scrollLeft());
        });

        $("#jsGridWrapper").on("scroll", function () {
            $("#topScroll").scrollLeft($(this).scrollLeft());
        });
    });

    function initializeGrid(pageSize) {
       $("#jsGrid").jsGrid({
           width: "100%",
           height: "auto",

           filtering: true,
           paging: true,
           autoload: true,
           pageSize: pageSize,
           pageButtonCount: 5,

           scrolling: true,
           scrollbarSize: 15,

             rowClick: function (args) {
                const projectId = args.item.id;
                window.location.href = "/Admin/ManageProcesses?id=" + projectId;
            },

            controller: {
                loadData: function (filter) {
                    return $.ajax({
                        type: "GET",
                        url: "/Project/GetProjects",
                        data: filter,
                        dataType: "json"
                    });
                }
            },


            fields: [
                { name: "id", type: "number", title: "Id", width: 50 },
                    {
                        name: "logo",
                        title: "Logo",
                        type: "text",
                        width: 80,
                        itemTemplate: function (value, item) {
                               if (value) {
                                   return $("<img>").attr("src", "/" + value)
                                                    .css({ height: "40px", width: "auto" });
                               } else {
                                   return $("<span>").text("Logo");
                               }
                    }
                },

                { name: "projectTitle", type: "text", title: "Proje Adı", width: 150 },
                { name: "clientName", type: "text", title: "Oluşturan", width: 100 },
                { name: "projectRate", type: "number", title: "Rate", width: 60 },
                { name: "projectType", type: "text", title: "Tür", width: 80 },
                { name: "priority", type: "text", title: "Öncelik", width: 80 },
                { name: "projectSize", type: "text", title: "Boyut", width: 80 },
                { name: "startDate", type: "text", title: "Başlangıç", width: 100 },
                { name: "endDate", type: "text", title: "Bitiş", width: 100 },
                {
                    name: "details",
                    type: "text",
                    title: "Detaylar",
                    width: 130,
                    itemTemplate: function (value, item) {
                        if (value && value.length > 15) {
                            return value.substring(0, 15) + "...";
                        }
                        return value;
                    }
                },
                {
                    type: "control",
                    width: 120,
                    editButton: false,
                    deleteButton: false,
                    itemTemplate: function (_, item) {
                       // Projeye ait dökümanları gösterecek ikon
                       var icon = $("<i class='fa fa-folder-open text-secondary mx-2 fs-5' style='cursor:pointer;'></i>");

                       // İkona tıklanınca dökümanları gösteren modalı aç
                        icon.on("click", function (event) {
                           event.stopPropagation(); // rowClick olayını engelle
                           showProjectDocumentsModal(item.documents); // Projeye ait dökümanları modalda göster
                       });

                       // Düzenleme ve silme ikonları
                       var editButton = $("<a>").attr("href", "/Project/Create?id=" + item.id)
                           .html('<i class="fa fa-edit text-primary mx-2"></i>');
                       var deleteButton = $("<a>").attr("href", "/Project/Delete/" + item.id)
                           .html('<i class="fa fa-trash text-danger mx-2"></i>');

                       // Döndürülen içerik: Edit, Delete, ve Dosya ikonları
                       return $("<div>").append(icon, editButton, deleteButton);
                    }
                }
            ],
            onDataLoaded: function () {
                // Scroll alanını genişlet (üst scroll bar çalışsın)
                setTimeout(function () {
                    const gridContent = document.querySelector("#jsGrid .jsgrid-grid-body");
                    const scrollSync = document.getElementById("scrollSyncContent");

                    if (gridContent && scrollSync) {
                        scrollSync.style.width = gridContent.scrollWidth + "px";
                    }
                }, 50);
            }
        });
    };

    function showProjectDocumentsModal(docs) {
        alert("Döküman gösterimi buraya eklenecek.");
    }

    function showProjectDocumentsModal(documents) {
        const container = $("#projectDocumentsContent");
        container.empty();  // Önceki içeriği temizle

        if (!Array.isArray(documents) || documents.length === 0) {
            container.append("<p class='text-muted'>Dosya bulunamadı.</p>");
        } else {
            documents.forEach(doc => {
                const filePath = doc.filePath || doc; // string ya da object olabilir
                   const description = doc.documentDescriptions || "Açıklama bulunmuyor.";
                      console.log("Document:", doc);


                const ext = filePath.split('.').pop().toLowerCase();
                const fullPath = "/" + filePath;
                let content;

                if (["jpg", "jpeg", "png", "gif"].includes(ext)) {
                    content = `<img src="${fullPath}" class="img-fluid rounded mb-2" style="max-height: 300px;" />`;
                } else if (ext === "pdf") {
                    content = `<iframe src="${fullPath}" style="width:100%; height:300px;" frameborder="0"></iframe>`;
                } else {
                    content = `<a href="${fullPath}" target="_blank">${filePath.split('/').pop()}</a>`;
                }

                container.append(`
                       <div class="card m-2" style="width: 30rem;">
                            <div class="border p-2 rounded shadow-lg">
                            ${content}
                               <p class="card-text text-truncate fw-bold" title="${description}">${description}</p>
                        </div>
                    </div>
                        <div class="border-top my-3 w-100"></div>
                `);
            });
        }

        const modal = new bootstrap.Modal(document.getElementById('projectDocumentsModal'));
        modal.show();
    }


</script>


