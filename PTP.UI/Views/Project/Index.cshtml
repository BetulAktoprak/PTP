@model IEnumerable<PTP.EntityLayer.Models.Project>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<style>
    .jsgrid-table {
        table-layout: fixed !important;
        width: 1500px !important;
    }
</style>


<div class="container-fluid">
    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div style="overflow-x: auto;">
                    <div id="jsGrid"></div>
                </div>

            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="projectDocumentsModal" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel">Proje Dökümanları</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
            </div>
            <div class="modal-body" style="max-height: 600px; overflow-y: auto;">
                <div class="d-flex flex-column align-items-center" id="projectDocumentsContent"></div>
            </div>


        </div>
    </div>
</div>


<script>
 $(function () {
        $("#jsGrid").jsGrid({
            width: "100%",
            height: "auto",

            filtering: true,
            paging: true,
            autoload: true,
            pageSize: 15,
            pageButtonCount: 5,

            scrolling: true,
            scrollbarSize: 15,

             rowClick: function (args) {
                const projectId = args.item.id;
                window.location.href = "/Admin/ManageProcesses?id=" + projectId;
            },

            controller: {
                loadData: function (filter) {
                    return $.ajax({
                        type: "GET",
                        url: "/Project/GetProjects",
                        data: filter,
                        dataType: "json"
                    });
                }
            },


            fields: [
                { name: "id", type: "number", title: "Id", width: 50 },
                    {
                        name: "logo",
                        title: "Logo",
                        type: "text",
                        width: 80,
                        itemTemplate: function (value, item) {
                               if (value) {
                                   return $("<img>").attr("src", "/" + value)
                                                    .css({ height: "40px", width: "auto" });
                               } else {
                                   return $("<span>").text("Yok");
                               }
                    }
                },

                { name: "projectTitle", type: "text", title: "Proje Adı", width: 150 },
                { name: "clientName", type: "text", title: "Oluşturan", width: 100 },
                { name: "projectRate", type: "number", title: "Rate", width: 60 },
                { name: "projectType", type: "text", title: "Tür", width: 80 },
                { name: "priority", type: "text", title: "Öncelik", width: 80 },
                { name: "projectSize", type: "text", title: "Boyut", width: 80 },
                { name: "startDate", type: "text", title: "Başlangıç", width: 100 },
                { name: "endDate", type: "text", title: "Bitiş", width: 100 },
                {
                    name: "details",
                    type: "text",
                    title: "Detaylar",
                    width: 130,
                    itemTemplate: function (value, item) {
                        if (value && value.length > 15) {
                            return value.substring(0, 15) + "...";
                        }
                        return value;
                    }
                },
                {
                    type: "control",
                    width: 120,
                    editButton: false,
                    deleteButton: false,
                    itemTemplate: function (_, item) {
                       // Projeye ait dökümanları gösterecek ikon
                       var icon = $("<i class='fa fa-folder-open text-secondary mx-2 fs-5' style='cursor:pointer;'></i>");

                       // İkona tıklanınca dökümanları gösteren modalı aç
                        icon.on("click", function (event) {
                           event.stopPropagation(); // rowClick olayını engelle
                           showProjectDocumentsModal(item.documents); // Projeye ait dökümanları modalda göster
                       });

                       // Düzenleme ve silme ikonları
                       var editButton = $("<a>").attr("href", "/Project/Create?id=" + item.id)
                           .html('<i class="fa fa-edit text-primary mx-2"></i>');
                       var deleteButton = $("<a>").attr("href", "/Project/Delete/" + item.id)
                           .html('<i class="fa fa-trash text-danger mx-2"></i>');

                       // Döndürülen içerik: Edit, Delete, ve Dosya ikonları
                       return $("<div>").append(icon, editButton, deleteButton);
                   }
                }
            ]
        });
    });

    function showProjectDocumentsModal(documents) {
        const container = $("#projectDocumentsContent");
        container.empty();  // Önceki içeriği temizle

        if (!Array.isArray(documents) || documents.length === 0) {
            container.append("<p class='text-muted'>Dosya bulunamadı.</p>");
        } else {
            documents.forEach(doc => {
                const filePath = doc.filePath || doc; // string ya da object olabilir
                   const description = doc.documentDescriptions || "Açıklama bulunmuyor.";
                      console.log("Document:", doc);


                const ext = filePath.split('.').pop().toLowerCase();
                const fullPath = "/" + filePath;
                let content;

                if (["jpg", "jpeg", "png", "gif"].includes(ext)) {
                    content = `<img src="${fullPath}" class="img-fluid rounded mb-2" style="max-height: 300px;" />`;
                } else if (ext === "pdf") {
                    content = `<iframe src="${fullPath}" style="width:100%; height:300px;" frameborder="0"></iframe>`;
                } else {
                    content = `<a href="${fullPath}" target="_blank">${filePath.split('/').pop()}</a>`;
                }

                container.append(`
                       <div class="card m-2" style="width: 30rem;">
                            <div class="border p-2 rounded shadow-lg">
                            ${content}
                               <p class="card-text text-truncate fw-bold" title="${description}">${description}</p>
                        </div>
                    </div>
                        <div class="border-top my-3 w-100"></div>
                `);
            });
        }

        const modal = new bootstrap.Modal(document.getElementById('projectDocumentsModal'));
        modal.show();
    }


</script>


