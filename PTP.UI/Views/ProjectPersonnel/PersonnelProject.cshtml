@model List<PTP.EntityLayer.Models.Project>

@{
    ViewData["Title"] = "PersonnelProject";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">


<style>
    .card-title {
        font-weight: bold;
        color: #0d6efd;
        text-align: center;
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 0.5rem;
    }

    .card-body {
        margin-top: 2rem;
    }

    .card-footer {
        text-align: right;
        font-size: 0.9rem;
    }

    .project-card {
        transition: transform 0.3s ease-in-out, box-shadow 0.3s;
        overflow: hidden;
    }

        .project-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 1rem 1.5rem rgba(0, 0, 0, 0.15);
        }

    .project-badge {
        position: absolute;
        top: 0.75rem;
        right: 0.75rem;
        font-size: 0.8rem;
    }

    .card-text {
        min-height: 80px;
        text-align: center;
    }

    .show-more {
        cursor: pointer;
        color: #0d6efd;
        text-decoration: underline;
        font-size: 0.9rem;
    }

    .extra-details {
        display: none;
        font-size: 0.85rem;
        color: #333;
        margin-top: 0.5rem;
    }

    .card-animated {
        animation: fadeInUp 0.5s ease forwards;
    }

</style>

<div class="container py-6">
    <h2 class="mb-4 text-center">Atama Yapılan Projelerin</h2>

    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        @foreach (var project in Model)
        {
            var today = DateTime.Today;

            string status;

            if (project.StartDate > today)
            {
                status = "Başlamadı";
            }
            else if (project.EndDate != null && project.EndDate < today)
            {
                status = "Tamamlandı";
            }
            else
            {
                status = "Devam Ediyor";
            }

            var badgeClass = status switch
            {
                "Tamamlandı" => "bg-success",
                "İptal" => "bg-danger",
                "Başlamadı" => "bg-warning",
                _ => "bg-primary"
            };

            var statusIcon = status switch
            {
                "Tamamlandı" => "bi-check-circle",
                "İptal" => "bi-x-circle",
                "Başlamadı" => "bi-clock",
                _ => "bi-hourglass-split"
            };


            <div class="col card-animated">
              
                    <div class="card h-100 shadow border-0 rounded-3 position-relative project-card text-decoration-none text-dark"
                         style="cursor: pointer;"
                         >

                        <span class="badge @badgeClass rounded-pill shadow-sm project-badge">
                            <i class="bi @statusIcon me-1"></i> @status
                        </span>

                        <div class="card-body d-flex flex-column">
                            <h4 class="card-title">
                                <i class="bi bi-folder2-open"></i>
                                @project.ProjectTitle
                            </h4>

                            <div class="card-text text-muted flex-grow-1">
                                @if (!string.IsNullOrEmpty(project.Details) && project.Details.Length > 100)
                                {
                                    <span class="short-text">@project.Details.Substring(0, 100)...</span>
                                    <span class="full-text" style="display:none;">@project.Details</span>
                                    <br />
                                    <span class="show-more" onclick="toggleDetails(this)">Detayları Göster</span>
                                }
                                else
                                {
                                    <span>@(project.Details ?? "Bu proje için açıklama mevcut değil.")</span>
                                }
                            </div>
                        </div>

                        <div class="card-footer bg-transparent border-0 mt-auto">
                            <div class="text-end small text-muted">
                                <div><i class="bi bi-calendar-event"></i> Başlangıç: <strong>@project.StartDate.ToShortDateString()</strong></div>
                                <div><i class="bi bi-calendar-check"></i> Bitiş: <strong>@project.EndDate?.ToShortDateString()</strong></div>
                            </div>
                        </div>
                    <a asp-controller="ProjectPersonnel"
                           asp-action="PersonnelManageProcesses"
                           asp-route-projectId="@project.Id"
                           class="stretched-link"></a>
                    </div>
            </div>

        }
    </div>
</div>

<script>
    function toggleDetails(button) {
        const container = button.closest('.card-text');
        const shortText = container.querySelector('.short-text');
        const fullText = container.querySelector('.full-text');

        if (fullText.style.display === "none" || fullText.style.display === "") {
            shortText.style.display = "none";
            fullText.style.display = "inline";
            button.innerText = "Detayları Gizle";
        } else {
            shortText.style.display = "inline";
            fullText.style.display = "none";
            button.innerText = "Detayları Göster";
        }
    }
</script>

